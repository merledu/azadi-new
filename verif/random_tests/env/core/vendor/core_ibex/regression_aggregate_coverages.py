# ////////////////////////////////////////////////////////////////////////////////////////////////////
# Company:        MICRO-ELECTRONICS RESEARCH LABORATORY                                             //
#                                                                                                   //
# Engineers:      Auringzaib Sabir - Verification Engineer                                          //
#                                                                                                   //
# Additional contributions by:                                                                      //
#                                                                                                   //
# Create Date:    10-August-2022                                                                    //
# Design Name:    SWERV and AZADI core Verfication                                                  //
# Module Name:    script.py                                                                         //
# Project Name:   Regression and aggregate coverages                                                //
# Language:       Python                                                                            //
#                                                                                                   //
# Description:                                                                                      //
#             This python script is used to run the regression and automate the dumping of tests    //
# results in a single files present at path "./out/test_results.txt". This script also automated the//
# coverages collection and merge the coverage result of all the tests that are run under regression //
# and creates a merged coverage file at path "out/cov_work/scope/coverage_all".                     //
#                                                                                                   //
# How to run?                                                                                       //
#                                                                                                   //
# Important:                                                                                        //
#          Add the names of all the tests in the file "./riscv_dv_extension/testlist.txt" that      //
# should be included in regression run.                                                             //
#                                                                                                   //
# Excecute the following command to run the regression and aggregate coverages                      //
# >> python3 regression_aggregate_coverages.py                                                      //
#                                                                                                   //
# NOTE:                                                                                             //
# This script has a 'script.py' on the bottom of it.                                                //
# All tests are UVM constrained random tests generated by Google DV framework and run on a random   //
# seed value.                                                                                       //
#                                                                                                   //
# Revision Date:                                                                                    //
#                                                                                                   //
# ////////////////////////////////////////////////////////////////////////////////////////////////////

import os
import shutil
import random
import sys
from pathlib import Path

# Setting relative path (__file__)
ROOT_DIR = os.path.realpath(os.path.join(os.path.dirname(__file__), ""))
OUT = "out"

# This function execute the command on the shell terminal
def run_test():
    cmd = "python3 script.py"
    print("Command to run = ", cmd)
    os.system(cmd)


# This function find the number of lines in a specific file
def no_of_lines(file_name):
    fp = open(file_name, "r")
    lines = len(fp.readlines())
    # print("Total lines:", lines)
    print("Total number of regression tests", lines)
    return lines


# The function is to delete/remove a particular file
def remove_file(file_path):
    if os.path.exists(file_path):
        os.remove(file_path)
        print("The file has been deleted successfully")
    else:
        print("The file does not exist!")


# Main
if __name__ == "__main__":

    running_test_file = ROOT_DIR + "/riscv_dv_extension/running_testlist.txt"
    remove_file(running_test_file)

    run_test_list = ROOT_DIR + "/riscv_dv_extension/testlist.txt"
    total_regr_test = no_of_lines(run_test_list)

    # Run the "for loop" for total number of tests present in testlist.txt
    for x in range(total_regr_test):
        run_test()
